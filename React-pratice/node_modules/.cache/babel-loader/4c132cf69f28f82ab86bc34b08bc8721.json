{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karth\\\\OneDrive\\\\Desktop\\\\git\\\\React-pratice\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport postList from './Components/postList';\nimport Posts from './Posts';\nimport AddPost from './Components/AddPost';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState(postList);\n  const [newPost, setnewPost] = useState({});\n\n  const updatePost = (id, like) => {\n    let post = posts[id];\n    post.likes = like + 1;\n    let updpost = [...posts];\n    updpost[id] = post;\n    setPosts(updpost); // console.log(updpost)\n    // console.log(post)\n  };\n\n  const addPost = text => {\n    let id = posts.length;\n    setnewPost({\n      id: id + 1,\n      text: text,\n      likes: 0\n    });\n    console.log(newPost);\n    setPosts(...posts, newPost);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [posts.map((_ref, index) => {\n      let {\n        id,\n        text,\n        likes\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Posts, {\n        text: text,\n        likes: likes,\n        id: id,\n        updatePost: (id, like) => updatePost(id, like)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(AddPost, {\n      addPost: text => addPost(text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4Q3/FnIik7N/1HuQJMs2OLNArFk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/karth/OneDrive/Desktop/git/React-pratice/src/App.js"],"names":["React","useState","postList","Posts","AddPost","App","posts","setPosts","newPost","setnewPost","updatePost","id","like","post","likes","updpost","addPost","text","length","console","log","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,WAAP;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAACC,QAAD,CAAjC;AACA,QAAM,CAACM,OAAD,EAASC,UAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMS,UAAU,GAAC,CAACC,EAAD,EAAIC,IAAJ,KAAW;AAC1B,QAAIC,IAAI,GAAGP,KAAK,CAACK,EAAD,CAAhB;AACAE,IAAAA,IAAI,CAACC,KAAL,GAAaF,IAAI,GAAG,CAApB;AACA,QAAIG,OAAO,GAAG,CAAC,GAAGT,KAAJ,CAAd;AACAS,IAAAA,OAAO,CAACJ,EAAD,CAAP,GAAcE,IAAd;AACAN,IAAAA,QAAQ,CAACQ,OAAD,CAAR,CAL0B,CAM1B;AACA;AACD,GARD;;AAUA,QAAMC,OAAO,GAAGC,IAAD,IAAQ;AACrB,QAAIN,EAAE,GAAGL,KAAK,CAACY,MAAf;AACAT,IAAAA,UAAU,CAAC;AACTE,MAAAA,EAAE,EAACA,EAAE,GAAC,CADG;AAETM,MAAAA,IAAI,EAACA,IAFI;AAGTH,MAAAA,KAAK,EAAC;AAHG,KAAD,CAAV;AAKAK,IAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACAD,IAAAA,QAAQ,CAAC,GAAGD,KAAJ,EAAUE,OAAV,CAAR;AACD,GATD;;AAWA,sBACE;AAAA,eAEKF,KAAK,CAACe,GAAN,CAAU,OAAiBC,KAAjB;AAAA,UAAC;AAACX,QAAAA,EAAD;AAAIM,QAAAA,IAAJ;AAASH,QAAAA;AAAT,OAAD;AAAA,0BACP,QAAC,KAAD;AAAmB,QAAA,IAAI,EAAEG,IAAzB;AAA+B,QAAA,KAAK,EAAEH,KAAtC;AAA6C,QAAA,EAAE,EAAGH,EAAlD;AAAsD,QAAA,UAAU,EAAE,CAACA,EAAD,EAAIC,IAAJ,KAAWF,UAAU,CAACC,EAAD,EAAIC,IAAJ;AAAvF,SAAYU,KAAZ;AAAA;AAAA;AAAA;AAAA,cADO;AAAA,KAAV,CAFL,eAMG,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEL,IAAI,IAAED,OAAO,CAACC,IAAD;AAA/B;AAAA;AAAA;AAAA;AAAA,YANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GArCQZ,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import React,{useState} from 'react';\nimport postList from './Components/postList';\nimport Posts from './Posts';\nimport AddPost from './Components/AddPost';\nimport './App.css';\nfunction App() {\n  const [posts,setPosts] = useState(postList)\n  const [newPost,setnewPost] =useState({})\n  \n  const updatePost=(id,like)=>{\n    let post = posts[id]\n    post.likes = like + 1\n    let updpost = [...posts]\n    updpost[id] = post\n    setPosts(updpost)\n    // console.log(updpost)\n    // console.log(post)\n  }\n\n  const addPost =(text)=>{\n    let id = posts.length\n    setnewPost({\n      id:id+1,\n      text:text,\n      likes:0\n    })\n    console.log(newPost)\n    setPosts(...posts,newPost)\n  }\n  \n  return(\n    <div>\n\n        {posts.map(({id,text,likes},index)=>\n            <Posts key={index} text={text} likes={likes} id ={id} updatePost={(id,like)=>updatePost(id,like)}/>\n        )}\n      \n       <AddPost addPost={text=>addPost(text)}/>\n     </div>\n  )\n   \n \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}